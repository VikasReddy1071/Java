Step 1: Password Generator
//code
import java.security.SecureRandom;
import java.util.Scanner;

public class PasswordGenerator {

    private static final String UPPERCASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private static final String LOWERCASE = "abcdefghijklmnopqrstuvwxyz";
    private static final String NUMBERS = "0123456789";
    private static final String SYMBOLS = "!@#$%^&*()-_=+[]{}|;:'\",.<>?/";

    private SecureRandom random = new SecureRandom();

    public String generatePassword(boolean useUppercase, boolean useLowercase, boolean useNumbers, boolean useSymbols, int length) {
        StringBuilder passwordAlphabet = new StringBuilder();

        if (useUppercase) {
            passwordAlphabet.append(UPPERCASE);
        }
        if (useLowercase) {
            passwordAlphabet.append(LOWERCASE);
        }
        if (useNumbers) {
            passwordAlphabet.append(NUMBERS);
        }
        if (useSymbols) {
            passwordAlphabet.append(SYMBOLS);
        }

        if (passwordAlphabet.length() == 0) {
            throw new IllegalArgumentException("No character types selected.");
        }

        StringBuilder password = new StringBuilder(length);
        for (int i = 0; i < length; i++) {
            int index = random.nextInt(passwordAlphabet.length());
            password.append(passwordAlphabet.charAt(index));
        }

        return password.toString();
    }
}

//Step 2: Password Strength Checker

public class PasswordStrengthChecker {

    public String checkStrength(String password) {
        int score = 0;

        if (password.length() >= 8) {
            score++;
        }
        if (password.length() >= 16) {
            score++;
        }
        if (password.chars().anyMatch(Character::isUpperCase)) {
            score++;
        }
        if (password.chars().anyMatch(Character::isLowerCase)) {
            score++;
        }
        if (password.chars().anyMatch(Character::isDigit)) {
            score++;
        }
        if (password.chars().anyMatch(ch -> "!@#$%^&*()-_=+[]{}|;:'\",.<>?/".indexOf(ch) >= 0)) {
            score++;
        }

        switch (score) {
            case 0: case 1: case 2:
                return "Weak";
            case 3: case 4:
                return "Medium";
            case 5:
                return "Good";
            case 6:
                return "Great";
            default:
                return "Unknown";
        }
    }
}

public class PasswordTips {

    public void displayTips() {
        System.out.println("Password Security Tips:");
        System.out.println("- Avoid using the same password for multiple accounts.");
        System.out.println("- Avoid character repetition, keyboard patterns, and dictionary words.");
        System.out.println("- Avoid sequences like '12345' or 'abcdef'.");
        System.out.println("- Use a mix of uppercase, lowercase, numbers, and symbols.");
        System.out.println("- Use passwords of at least 16 characters for better security.");
    }
}

import java.util.Scanner;

public class PasswordGeneratorApp {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        PasswordGenerator generator = new PasswordGenerator();
        PasswordStrengthChecker checker = new PasswordStrengthChecker();
        PasswordTips tips = new PasswordTips();

        while (true) {
            System.out.println("\nPassword Generator Application");
            System.out.println("1. Generate Password");
            System.out.println("2. Check Password Strength");
            System.out.println("3. Display Password Security Tips");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = Integer.parseInt(scanner.nextLine());

            switch (choice) {
                case 1:
                    System.out.print("Include uppercase letters? (yes/no): ");
                    boolean useUppercase = scanner.nextLine().equalsIgnoreCase("yes");

                    System.out.print("Include lowercase letters? (yes/no): ");
                    boolean useLowercase = scanner.nextLine().equalsIgnoreCase("yes");

                    System.out.print("Include numbers? (yes/no): ");
                    boolean useNumbers = scanner.nextLine().equalsIgnoreCase("yes");

                    System.out.print("Include symbols? (yes/no): ");
                    boolean useSymbols = scanner.nextLine().equalsIgnoreCase("yes");

                    System.out.print("Enter desired password length: ");
                    int length = Integer.parseInt(scanner.nextLine());

                    try {
                        String password = generator.generatePassword(useUppercase, useLowercase, useNumbers, useSymbols, length);
                        System.out.println("Generated Password: " + password);
                    } catch (IllegalArgumentException e) {
                        System.out.println(e.getMessage());
                    }
                    break;

                case 2:
                    System.out.print("Enter a password to check its strength: ");
                    String passwordToCheck = scanner.nextLine();
                    String strength = checker.checkStrength(passwordToCheck);
                    System.out.println("Password Strength: " + strength);
                    break;

                case 3:
                    tips.displayTips();
                    break;

                case 4:
                    System.out.println("Exiting the application.");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}

